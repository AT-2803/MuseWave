datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Job {
  id          String     @id @default(cuid())
  status      JobStatus  @default(pending)
  prompt      String
  duration    Int
  includeVideo Boolean   @default(false)
  plan        Json?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  assets      Asset[]
  userId      String?
}

model Asset {
  id        String    @id @default(cuid())
  jobId     String
  type      AssetType
  url       String
  size      Int?
  createdAt DateTime  @default(now())
  job       Job       @relation(fields: [jobId], references: [id], onDelete: Cascade)
}

model ApiKey {
  id        String     @id @default(cuid())
  key       String     @unique
  name      String?
  createdAt DateTime   @default(now())
  rateLimits RateLimit[]
  usages    Usage[]
}

model RateLimit {
  id          String   @id @default(cuid())
  apiKeyId    String
  windowStart DateTime
  requestCount Int     @default(0)
  apiKey      ApiKey   @relation(fields: [apiKeyId], references: [id], onDelete: Cascade)
  @@unique([apiKeyId, windowStart])
}

model Usage {
  id        String   @id @default(cuid())
  apiKeyId  String
  jobId     String?
  action    String
  timestamp DateTime @default(now())
  apiKey    ApiKey   @relation(fields: [apiKeyId], references: [id], onDelete: Cascade)
}

enum JobStatus {
  pending
  processing
  completed
  failed
}

enum AssetType {
  audio
  video
  plan
}
